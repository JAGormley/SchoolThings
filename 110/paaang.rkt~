;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-advanced-reader.ss" "lang")((modname paaang) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #t #t none #f ())))
(require 2htdp/image)
(require 2htdp/universe)

(define BOARDW 600)
(define BOARDH 450)

(define BOARD (empty-scene BOARDW BOARDH "black"))
(define PBLOCK (square 20 "solid" "white"))
(define PADDLE (above/align "middle"
                            PBLOCK 
                            PBLOCK
                            PBLOCK
                            PBLOCK
                            PBLOCK
                            PBLOCK))

(define BALL PBLOCK)
(define SPEED 15)



(define-struct ball (x dir))
(define-struct pad (y dir))
(define-struct game (ball pad))




(define (main gs)
  (big-bang gs
            (on-tick tick .05)
            (to-draw render)))
            (on-key key-handler)



;; GAME -> GAME

(define (tick gs)
  (make-game (move-ball (game-ball gs))
             (move-pad  (game-pad gs))))
  
  
;; BALL -> BALL

(define (move-ball b)  
  (cond [(> (ball-x b) BOARDW)
         (make-ball (- (ball-x b) SPEED)
                    false)]
        [(< (ball-x b) 0)
         (make-ball (+ (ball-x b) SPEED)
                    true)]
        [else           
         (if (ball-dir b)
             (make-ball (+ (ball-x b) SPEED)
                        (ball-dir b))
             (make-ball (- (ball-x b) SPEED)
                        (ball-dir b)))]))

;; PADS -> PADS




(define (render gs)
  (make- (draw-ball (game-ball gs))
       (draw-pads (game-pad gs))))

  (place-image BALL
               (ball-x b)
               (/ (image-height BOARD) 2)
               (render-pad b)))

(define (render-pad b)
  (place-image PADDLE
               (/ BOARDW 6)
               ()                
                BOARD)

         
         
         
(main (make-ball 6 true)) 